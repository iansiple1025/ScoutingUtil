{"ast":null,"code":"var _jsxFileName = \"/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/DashboardScreen/DashboardScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js'; // Import registerables\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardScreen = () => {\n  _s();\n  const [teamData, setTeamData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/impi/getAvgNotesFed/2024mimus');\n        const formattedData = Object.entries(response.data).map(([teamNumber, avgNotesFed]) => {\n          const numericAvgNotesFed = typeof avgNotesFed === 'string' ? parseFloat(avgNotesFed) : 0; // Default to 0 if not a number\n          return {\n            teamNumber,\n            avgNotesFed: numericAvgNotesFed\n          };\n        });\n        setTeamData(formattedData); // Cast formattedData to TeamData[]\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  Chart.register(...registerables); // Register all default scales\n\n  const chartData = {\n    labels: loading ? [] : teamData.map(team => `Team ${team.teamNumber}`),\n    datasets: [{\n      label: 'Avg Notes Fed',\n      data: loading ? [] : teamData.map(team => team.avgNotesFed),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Team Performance Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Team Rankings (Avg Notes Fed)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Avg Notes Fed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teamData.sort((a, b) => b.avgNotesFed - a.avgNotesFed).map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.teamNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.avgNotesFed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, team.teamNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardScreen, \"RwkGImw45CYTK09DGx5qq8b1UKs=\");\n_c = DashboardScreen;\nexport default DashboardScreen;\nvar _c;\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Chart","registerables","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardScreen","_s","teamData","setTeamData","loading","setLoading","fetchData","response","get","formattedData","Object","entries","data","map","teamNumber","avgNotesFed","numericAvgNotesFed","parseFloat","error","console","register","chartData","labels","team","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","scales","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","options","sort","a","b","_c","$RefreshReg$"],"sources":["/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/DashboardScreen/DashboardScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { Chart, registerables } from 'chart.js'; // Import registerables\n\ninterface TeamData {\n  teamNumber: string;\n  avgNotesFed: number;\n}\n\nconst DashboardScreen: React.FC = () => {\n  const [teamData, setTeamData] = useState<TeamData[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/impi/getAvgNotesFed/2024mimus');\n        const formattedData = Object.entries(response.data).map(([teamNumber, avgNotesFed]) => {\n          const numericAvgNotesFed = typeof avgNotesFed === 'string' ? parseFloat(avgNotesFed) : 0; // Default to 0 if not a number\n          return {\n            teamNumber,\n            avgNotesFed: numericAvgNotesFed,\n          };\n        });\n        \n        setTeamData(formattedData as TeamData[]); // Cast formattedData to TeamData[]\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  Chart.register(...registerables); // Register all default scales\n\n  const chartData: ChartData<'bar'> = {\n    labels: loading ? [] : teamData.map(team => `Team ${team.teamNumber}`),\n    datasets: [\n      {\n        label: 'Avg Notes Fed',\n        data: loading ? [] : teamData.map(team => team.avgNotesFed),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const chartOptions: ChartOptions<'bar'> = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h1>Team Performance Dashboard</h1>\n\n      {loading ? (\n        <p>Loading data...</p>\n      ) : (\n        <>\n          <Bar data={chartData} options={chartOptions} />\n\n          <h2>Team Rankings (Avg Notes Fed)</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Team Number</th>\n                <th>Avg Notes Fed</th>\n              </tr>\n            </thead>\n            <tbody>\n              {teamData.sort((a, b) => b.avgNotesFed - a.avgNotesFed).map((team) => (\n                <tr key={team.teamNumber}>\n                  <td>{team.teamNumber}</td>\n                  <td>{team.avgNotesFed}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}