{"ast":null,"code":"var _jsxFileName = \"/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/MatchesScreen/MatchesScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchesScreen = () => {\n  _s();\n  const {\n    district\n  } = useParams();\n  const [matchData, setMatchData] = useState([]);\n  const [scannedCounts, setScannedCounts] = useState({});\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/matches/${district}`);\n        const responseData = response.data.body;\n        const transformedData = Object.keys(responseData).map(matchNumber => ({\n          match: matchNumber,\n          redalliance: responseData[matchNumber].slice(3).map(team => `${team}`),\n          bluealliance: responseData[matchNumber].slice(0, 3).map(team => `${team}`)\n        }));\n        setMatchData(transformedData);\n\n        // Fetch the number of scanned teams for each match\n        const scannedCounts = {};\n        await Promise.all(transformedData.map(async match => {\n          const scannedResponse = await axios.get(`http://localhost:8080/impi/getNumberScanned/${match.match}`);\n          scannedCounts[match.match] = scannedResponse.data.numberScanned || 0;\n        }));\n        setScannedCounts(scannedCounts);\n      } catch (error) {\n        console.error('Error fetching match data:', error);\n      }\n    };\n    fetchMatchData();\n  }, [district]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"match table\",\n      sx: {\n        minWidth: 650\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            backgroundColor: '#1976d2',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'white',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'white',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Red Alliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'white',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Blue Alliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'white',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: matchData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:nth-of-type(odd)': {\n              backgroundColor: '#f5f5f5'\n            },\n            '&:nth-of-type(even)': {\n              backgroundColor: '#ffffff'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              border: '1px solid #dddddd',\n              backgroundColor: scannedCounts[row.match] === 6 ? '#4caf50' : 'inherit',\n              // Green if 6 teams are scanned\n              color: scannedCounts[row.match] === 6 ? 'white' : 'inherit',\n              fontWeight: scannedCounts[row.match] === 6 ? 'bold' : 'normal'\n            },\n            children: row.match\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#d32f2f',\n              fontWeight: 'bold',\n              border: '1px solid #dddddd'\n            },\n            children: row.redalliance.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#1976d2',\n              fontWeight: 'bold',\n              border: '1px solid #dddddd'\n            },\n            children: row.bluealliance.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              border: '1px solid #dddddd'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/ScanningScreen/${district}/${row.match}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchesScreen, \"NVb0rieFb8BBtI/BUzt8M1QL+CU=\", false, function () {\n  return [useParams];\n});\n_c = MatchesScreen;\nexport default MatchesScreen;\nvar _c;\n$RefreshReg$(_c, \"MatchesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","axios","useParams","Link","jsxDEV","_jsxDEV","MatchesScreen","_s","district","matchData","setMatchData","scannedCounts","setScannedCounts","fetchMatchData","response","get","responseData","data","body","transformedData","Object","keys","map","matchNumber","match","redalliance","slice","team","bluealliance","Promise","all","scannedResponse","numberScanned","error","console","component","children","sx","minWidth","backgroundColor","color","fontWeight","border","fileName","_jsxFileName","lineNumber","columnNumber","row","index","join","to","variant","_c","$RefreshReg$"],"sources":["/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/MatchesScreen/MatchesScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n} from '@mui/material';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\ninterface MatchData {\n  match: string;\n  redalliance: string[];\n  bluealliance: string[];\n}\n\nconst MatchesScreen: React.FC = () => {\n  const { district } = useParams();\n  const [matchData, setMatchData] = useState<MatchData[]>([]);\n  const [scannedCounts, setScannedCounts] = useState<{ [key: string]: number }>({});\n\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/matches/${district}`);\n        const responseData = response.data.body;\n\n        const transformedData: MatchData[] = Object.keys(responseData).map((matchNumber) => ({\n          match: matchNumber,\n          redalliance: responseData[matchNumber].slice(3).map((team: number) => `${team}`),\n          bluealliance: responseData[matchNumber].slice(0, 3).map((team: number) => `${team}`),\n        }));\n        setMatchData(transformedData);\n\n        // Fetch the number of scanned teams for each match\n        const scannedCounts: { [key: string]: number } = {};\n        await Promise.all(\n          transformedData.map(async (match) => {\n            const scannedResponse = await axios.get(`http://localhost:8080/impi/getNumberScanned/${match.match}`);\n            scannedCounts[match.match] = scannedResponse.data.numberScanned || 0;\n          })\n        );\n        setScannedCounts(scannedCounts);\n      } catch (error) {\n        console.error('Error fetching match data:', error);\n      }\n    };\n\n    fetchMatchData();\n  }, [district]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"match table\" sx={{ minWidth: 650 }}>\n        <TableHead>\n          <TableRow sx={{ backgroundColor: '#1976d2', color: 'white' }}>\n            <TableCell sx={{ color: 'white', fontWeight: 'bold', border: '1px solid #ffffff' }}>Match</TableCell>\n            <TableCell sx={{ color: 'white', fontWeight: 'bold', border: '1px solid #ffffff' }}>Red Alliance</TableCell>\n            <TableCell sx={{ color: 'white', fontWeight: 'bold', border: '1px solid #ffffff' }}>Blue Alliance</TableCell>\n            <TableCell sx={{ color: 'white', fontWeight: 'bold', border: '1px solid #ffffff' }}>Scan</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {matchData.map((row, index) => (\n            <TableRow\n              key={index}\n              sx={{\n                '&:nth-of-type(odd)': { backgroundColor: '#f5f5f5' },\n                '&:nth-of-type(even)': { backgroundColor: '#ffffff' },\n              }}\n            >\n              <TableCell\n                sx={{\n                  border: '1px solid #dddddd',\n                  backgroundColor: scannedCounts[row.match] === 6 ? '#4caf50' : 'inherit', // Green if 6 teams are scanned\n                  color: scannedCounts[row.match] === 6 ? 'white' : 'inherit',\n                  fontWeight: scannedCounts[row.match] === 6 ? 'bold' : 'normal',\n                }}\n              >\n                {row.match}\n              </TableCell>\n              <TableCell sx={{ color: '#d32f2f', fontWeight: 'bold', border: '1px solid #dddddd' }}>\n                {row.redalliance.join(', ')}\n              </TableCell>\n              <TableCell sx={{ color: '#1976d2', fontWeight: 'bold', border: '1px solid #dddddd' }}>\n                {row.bluealliance.join(', ')}\n              </TableCell>\n              <TableCell sx={{ border: '1px solid #dddddd' }}>\n                <Link to={`/ScanningScreen/${district}/${row.match}`}>\n                  <Button variant=\"contained\" color=\"primary\">Scan</Button>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatchesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}