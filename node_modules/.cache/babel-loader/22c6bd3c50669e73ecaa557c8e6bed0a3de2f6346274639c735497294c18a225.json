{"ast":null,"code":"var _jsxFileName = \"/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/MatchesScreen/MatchesScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchesScreen = () => {\n  _s();\n  const {\n    district\n  } = useParams();\n  const [matchData, setMatchData] = useState([]);\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/matches/${district}`);\n        const responseData = response.data.body;\n        const transformedData = await Promise.all(Object.keys(responseData).map(async matchNumber => {\n          const matchDataResponse = await axios.get(`http://localhost:8080/impi/getNumberScanned/${district}/${matchNumber}`);\n          const numberOfTeamsScanned = matchDataResponse.data;\n          return {\n            match: matchNumber,\n            redalliance: responseData[matchNumber].slice(3).map(team => `${team}`),\n            bluealliance: responseData[matchNumber].slice(0, 3).map(team => `${team}`),\n            numberOfTeamsScanned\n          };\n        }));\n        setMatchData(transformedData);\n      } catch (error) {\n        console.error('Error fetching match data:', error);\n      }\n    };\n    fetchMatchData();\n  }, [district]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"match table\",\n      sx: {\n        minWidth: 650\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            backgroundColor: '#d3d3d3',\n            color: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: \"black\",\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'black',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Red Alliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'black',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Blue Alliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: 'black',\n              fontWeight: 'bold',\n              border: '1px solid #ffffff'\n            },\n            children: \"Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: matchData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:nth-of-type(odd)': {\n              backgroundColor: '#f5f5f5'\n            },\n            '&:nth-of-type(even)': {\n              backgroundColor: '#ffffff'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              border: '1px solid #dddddd',\n              backgroundColor: row.numberOfTeamsScanned >= 6 ? '#28a745' : 'inherit'\n            },\n            children: row.match\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#d32f2f',\n              fontWeight: 'bold',\n              border: '1px solid #dddddd',\n              backgroundColor: \"#fee\"\n            },\n            children: row.redalliance.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#1976d2',\n              fontWeight: 'bold',\n              border: '1px solid #dddddd',\n              backgroundColor: \"#eef\"\n            },\n            children: row.bluealliance.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              border: '1px solid #dddddd'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/ScanningScreen/${district}/${row.match}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchesScreen, \"N34p6wpz4kWpcnu4az6UINlPjrQ=\", false, function () {\n  return [useParams];\n});\n_c = MatchesScreen;\nexport default MatchesScreen;\nvar _c;\n$RefreshReg$(_c, \"MatchesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","axios","useParams","Link","jsxDEV","_jsxDEV","MatchesScreen","_s","district","matchData","setMatchData","fetchMatchData","response","get","responseData","data","body","transformedData","Promise","all","Object","keys","map","matchNumber","matchDataResponse","numberOfTeamsScanned","match","redalliance","slice","team","bluealliance","error","console","component","children","sx","minWidth","backgroundColor","color","fontWeight","border","fileName","_jsxFileName","lineNumber","columnNumber","row","index","join","to","variant","_c","$RefreshReg$"],"sources":["/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/MatchesScreen/MatchesScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n} from '@mui/material';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\ninterface MatchData {\n  match: string;\n  redalliance: string[];\n  bluealliance: string[];\n  numberOfTeamsScanned: number; // New field for number of teams scanned\n}\n\nconst MatchesScreen: React.FC = () => {\n  const { district } = useParams();\n  const [matchData, setMatchData] = useState<MatchData[]>([]);\n\n  useEffect(() => {\n    const fetchMatchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/matches/${district}`);\n        const responseData = response.data.body;\n\n        const transformedData: MatchData[] = await Promise.all(\n          Object.keys(responseData).map(async (matchNumber) => {\n            const matchDataResponse = await axios.get(`http://localhost:8080/impi/getNumberScanned/${district}/${matchNumber}`);\n            const numberOfTeamsScanned = matchDataResponse.data;\n\n            return {\n              match: matchNumber,\n              redalliance: responseData[matchNumber].slice(3).map((team: number) => `${team}`),\n              bluealliance: responseData[matchNumber].slice(0, 3).map((team: number) => `${team}`),\n              numberOfTeamsScanned,\n            };\n          })\n        );\n\n        setMatchData(transformedData);\n      } catch (error) {\n        console.error('Error fetching match data:', error);\n      }\n    };\n\n    fetchMatchData();\n  }, [district]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"match table\" sx={{ minWidth: 650 }}>\n        <TableHead>\n          <TableRow sx={{ backgroundColor: '#d3d3d3', color: 'black' }}>\n            <TableCell sx={{ color: \"black\", fontWeight: 'bold', border: '1px solid #ffffff' }}>Match</TableCell>\n            <TableCell sx={{ color: 'black', fontWeight: 'bold', border: '1px solid #ffffff' }}>Red Alliance</TableCell>\n            <TableCell sx={{ color: 'black', fontWeight: 'bold', border: '1px solid #ffffff' }}>Blue Alliance</TableCell>\n            <TableCell sx={{ color: 'black', fontWeight: 'bold', border: '1px solid #ffffff' }}>Scan</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {matchData.map((row, index) => (\n            <TableRow\n              key={index}\n              sx={{\n                '&:nth-of-type(odd)': { backgroundColor: '#f5f5f5' },\n                '&:nth-of-type(even)': { backgroundColor: '#ffffff' },\n              }}\n            >\n              <TableCell sx={{ border: '1px solid #dddddd', backgroundColor: row.numberOfTeamsScanned >= 6 ? '#28a745' : 'inherit' }}>\n                {row.match}\n              </TableCell>\n              <TableCell sx={{ color: '#d32f2f', fontWeight: 'bold', border: '1px solid #dddddd' , backgroundColor:\"#fee\"}}>\n                {row.redalliance.join(', ')}\n              </TableCell>\n              <TableCell sx={{ color: '#1976d2', fontWeight: 'bold', border: '1px solid #dddddd', backgroundColor:\"#eef\"}}>\n                {row.bluealliance.join(', ')}\n              </TableCell>\n              <TableCell sx={{ border: '1px solid #dddddd' }}>\n                <Link to={`/ScanningScreen/${district}/${row.match}`}>\n                  <Button variant=\"contained\" color=\"primary\">Scan</Button>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatchesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}