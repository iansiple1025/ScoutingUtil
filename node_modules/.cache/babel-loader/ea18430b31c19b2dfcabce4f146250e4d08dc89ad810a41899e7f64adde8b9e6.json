{"ast":null,"code":"var _jsxFileName = \"/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/DashboardScreen/DashboardScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js'; // Import registerables\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardScreen = () => {\n  _s();\n  const [teamData, setTeamData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDataField, setSelectedDataField] = useState('avgNotesFed'); // Default to avgNotesFed\n  const [eventCode, setEventCode] = useState('2024mimus'); // Example event code\n\n  const dataFields = ['avgNotesFed', 'avgSpeakerNotes', 'avgAmpNotes', 'avgAutonNotes']; // Available data fields\n\n  useEffect(() => {\n    const fetchData = async field => {\n      try {\n        const url = `http://localhost:8080/impi/getAvg${field}/${eventCode}`; // Use eventCode in URL\n        const response = await axios.get(url);\n        const formattedData = Object.entries(response.data).map(([teamNumber, value]) => ({\n          teamNumber,\n          [field]: typeof value === 'string' ? parseFloat(value) : value\n        }));\n        setTeamData(formattedData);\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData(selectedDataField);\n  }, [selectedDataField, eventCode]);\n\n  // Register chart.js default scales (assuming registerables are imported)\n  Chart.register(...registerables);\n  const chartData = React.useMemo(() => ({\n    // Destructure teamData for cleaner access\n    labels: teamData.map(team => `Team ${team.teamNumber}`),\n    datasets: [{\n      label: `Avg ${selectedDataField}`,\n      // Dynamic label based on selection\n      data: teamData.map(team => {\n        var _team$selectedDataFie;\n        return ((_team$selectedDataFie = team[selectedDataField]) === null || _team$selectedDataFie === void 0 ? void 0 : _team$selectedDataFie.toFixed(2)) || 0;\n      }),\n      // Use toFixed(2) for decimals, handle missing values with 0\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  }), [teamData, selectedDataField]);\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  const handleDataFieldChange = event => {\n    setSelectedDataField(event.target.value);\n  };\n  const handleEventCodeChange = event => {\n    setEventCode(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Team Performance Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDataField,\n      onChange: handleDataFieldChange,\n      children: dataFields.map(field => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: field,\n        children: [\"Avg \", field]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: eventCode,\n      onChange: handleEventCodeChange,\n      placeholder: \"Event Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Team Rankings (Avg \", selectedDataField, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Avg \", selectedDataField]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teamData.sort((a, b) => b[selectedDataField] - a[selectedDataField]).map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: team.teamNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: team[selectedDataField]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, team.teamNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardScreen, \"VIvKcw07BDLR//4w0wWzDUm1ENY=\");\n_c = DashboardScreen;\nexport default DashboardScreen;\nvar _c;\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Chart","registerables","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardScreen","_s","teamData","setTeamData","loading","setLoading","selectedDataField","setSelectedDataField","eventCode","setEventCode","dataFields","fetchData","field","url","response","get","formattedData","Object","entries","data","map","teamNumber","value","parseFloat","error","console","register","chartData","useMemo","labels","team","datasets","label","_team$selectedDataFie","toFixed","backgroundColor","borderColor","borderWidth","chartOptions","responsive","scales","y","beginAtZero","handleDataFieldChange","event","target","handleEventCodeChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","options","sort","a","b","_c","$RefreshReg$"],"sources":["/Users/iansiple/Documents/impi-scouting-util_ui/src/Components/DashboardScreen/DashboardScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { Chart, registerables } from 'chart.js'; // Import registerables\n\ninterface TeamData {\n  teamNumber: string;\n  avgNotesFed?: number;\n  avgSpeakerNotes?: number;\n  avgAmpNotes?: number;\n  avgAutonNotes?: number;\n}\n\nconst DashboardScreen = () => {\n  const [teamData, setTeamData] = useState<TeamData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDataField, setSelectedDataField] = useState<string>('avgNotesFed'); // Default to avgNotesFed\n  const [eventCode, setEventCode] = useState<string>('2024mimus'); // Example event code\n\n  const dataFields = ['avgNotesFed', 'avgSpeakerNotes', 'avgAmpNotes', 'avgAutonNotes']; // Available data fields\n\n  useEffect(() => {\n    const fetchData = async (field: string) => {\n      try {\n        const url = `http://localhost:8080/impi/getAvg${field}/${eventCode}`; // Use eventCode in URL\n        const response = await axios.get(url);\n        const formattedData = Object.entries(response.data).map(([teamNumber, value]) => ({\n          teamNumber,\n          [field]: typeof value === 'string' ? parseFloat(value) : value,\n        }));\n        setTeamData(formattedData);\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData(selectedDataField);\n  }, [selectedDataField, eventCode]);\n\n  // Register chart.js default scales (assuming registerables are imported)\n  Chart.register(...registerables);\n\n  const chartData = React.useMemo(() => ({\n    // Destructure teamData for cleaner access\n    labels: teamData.map(team => `Team ${team.teamNumber}`),\n    datasets: [\n      {\n        label: `Avg ${selectedDataField}`, // Dynamic label based on selection\n        data: teamData.map(team => team[selectedDataField]?.toFixed(2) || 0), // Use toFixed(2) for decimals, handle missing values with 0\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  }), [teamData, selectedDataField]);\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  const handleDataFieldChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedDataField(event.target.value);\n  };\n\n  const handleEventCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEventCode(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Team Performance Dashboard</h1>\n\n      <select value={selectedDataField} onChange={handleDataFieldChange}>\n        {dataFields.map((field) => (\n          <option key={field} value={field}>\n            Avg {field}\n          </option>\n        ))}\n      </select>\n\n      <input type=\"text\" value={eventCode} onChange={handleEventCodeChange} placeholder=\"Event Code\" />\n\n      {loading ? (\n        <p>Loading data...</p>\n      ) : (\n        <>\n          <Bar data={chartData} options={chartOptions} />\n\n          <h2>Team Rankings (Avg {selectedDataField})</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Team Number</th>\n                <th>Avg {selectedDataField}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {teamData.sort((a, b) => b[selectedDataField] - a[selectedDataField]).map((team) => (\n                <tr key={team.teamNumber}>\n                  <td>{team.teamNumber}</td>\n                  <td>{team[selectedDataField]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}